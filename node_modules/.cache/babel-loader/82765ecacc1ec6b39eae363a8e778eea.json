{"ast":null,"code":"var _jsxFileName = \"E:\\\\Fiverr Project\\\\WebSite Portfolio\\\\Portfolio-Website\\\\client\\\\src\\\\Components\\\\Work\\\\Work.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment } from 'react';\nimport { useToggle } from '../../Resources/util/useToggle';\nimport './Work.css';\nimport '../../Containers/Terminal/Terminal.css';\nimport { ReactComponent as ExternalLink } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../Resources/icons/external-link.svg\";\nimport { ReactComponent as Folder } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../Resources/icons/folder.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst all_projects = (props, showAllRepos) => {\n  let result = /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: props.repos.map((obj, index) => {\n      if (showAllRepos || index < 6) return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"insideContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"logo\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: obj.link,\n              target: \"_blank\",\n              rel: \"noreferrer\",\n              children: /*#__PURE__*/_jsxDEV(ExternalLink, {\n                className: \"ext\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 16,\n                columnNumber: 77\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Folder, {\n              className: \"folder\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title\",\n            children: obj.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"description\",\n            children: obj.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n            children: obj.languages\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }, this)\n      }, `work-element-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 20\n      }, this);else return /*#__PURE__*/_jsxDEV(Fragment, {}, `work-element-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 20\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 18\n  }, this);\n\n  if (props.test) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  return result;\n};\n\nconst Work = props => {\n  _s();\n\n  const [showAllRepos, toggleShowAllRepos] = useToggle(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"workHeader\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Some Things That I've Built\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), all_projects(props, showAllRepos), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleShowAllRepos,\n        className: \"load\",\n        children: showAllRepos ? \"Load Less\" : \"Load More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Work, \"l8Ms88e+yJxjk6K9PMOUZyHzOJk=\", false, function () {\n  return [useToggle];\n});\n\n_c = Work;\nexport default Work;\n\nvar _c;\n\n$RefreshReg$(_c, \"Work\");","map":{"version":3,"sources":["E:/Fiverr Project/WebSite Portfolio/Portfolio-Website/client/src/Components/Work/Work.js"],"names":["React","Fragment","useToggle","all_projects","props","showAllRepos","result","repos","map","obj","index","link","name","description","languages","test","Work","toggleShowAllRepos"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,gCAA1B;AACA,OAAO,YAAP;AACA,OAAO,wCAAP;;;;;;AAKA,MAAMC,YAAY,GAAE,CAACC,KAAD,EAAOC,YAAP,KAAsB;AACtC,MAAIC,MAAM,gBAAG;AAAA,cACZF,KAAK,CAACG,KAAN,CAAYC,GAAZ,CAAgB,CAACC,GAAD,EAAKC,KAAL,KAAc;AAC3B,UAAGL,YAAY,IAAIK,KAAK,GAAG,CAA3B,EACI,oBAAO;AAAA,+BACH;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,oCACI;AAAG,cAAA,IAAI,EAAED,GAAG,CAACE,IAAb;AAAmB,cAAA,MAAM,EAAC,QAA1B;AAAmC,cAAA,GAAG,EAAC,YAAvC;AAAA,qCAAoD,QAAC,YAAD;AAAc,gBAAA,SAAS,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA;AAApD;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,MAAD;AAAQ,cAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMI;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,sBAAwBF,GAAG,CAACG;AAA5B;AAAA;AAAA;AAAA;AAAA,kBANJ,eAQI;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,sBAA8BH,GAAG,CAACI;AAAlC;AAAA;AAAA;AAAA;AAAA,kBARJ,eAUI;AAAA,sBAASJ,GAAG,CAACK;AAAb;AAAA;AAAA;AAAA;AAAA,kBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADG,SAAU,gBAAeJ,KAAM,EAA/B;AAAA;AAAA;AAAA;AAAA,cAAP,CADJ,KAgBI,oBAAO,QAAC,QAAD,MAAgB,gBAAeA,KAAM,EAArC;AAAA;AAAA;AAAA;AAAA,cAAP;AACP,KAlBA;AADY;AAAA;AAAA;AAAA;AAAA,UAAb;;AAqBA,MAAIN,KAAK,CAACW,IAAV,EACI,oBAAO,qCAAP;AACJ,SAAOT,MAAP;AACH,CAzBD;;AA2BA,MAAMU,IAAI,GAAIZ,KAAD,IAAU;AAAA;;AACnB,QAAM,CAACC,YAAD,EAAcY,kBAAd,IAAoCf,SAAS,CAAC,KAAD,CAAnD;AACA,sBACA;AAAK,IAAA,SAAS,EAAG,MAAjB;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,EAIKC,YAAY,CAACC,KAAD,EAAOC,YAAP,CAJjB,eAKI;AAAQ,QAAA,OAAO,EAAEY,kBAAjB;AAAoC,QAAA,SAAS,EAAC,MAA9C;AAAA,kBAAuDZ,YAAD,GAAiB,WAAjB,GAA+B;AAArF;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADA;AAWH,CAbD;;GAAMW,I;UACwCd,S;;;KADxCc,I;AAiBN,eAAeA,IAAf","sourcesContent":["import React, { Fragment } from 'react';\r\nimport { useToggle } from '../../Resources/util/useToggle'\r\nimport './Work.css';\r\nimport '../../Containers/Terminal/Terminal.css'\r\n\r\nimport {ReactComponent as ExternalLink} from \"../../Resources/icons/external-link.svg\";\r\nimport {ReactComponent as Folder} from \"../../Resources/icons/folder.svg\";\r\n\r\nconst all_projects= (props,showAllRepos)=>{\r\n    let result = <ul>\r\n    {props.repos.map((obj,index) =>{\r\n        if(showAllRepos || index < 6)\r\n            return(<li key={`work-element-${index}`}>\r\n                <div className=\"insideContainer\">\r\n                    <div className=\"logo\">\r\n                        <a href={obj.link} target=\"_blank\" rel=\"noreferrer\"><ExternalLink className=\"ext\"/></a>\r\n                        <Folder className=\"folder\"/>\r\n                    </div>\r\n                    \r\n                    <div className=\"title\">{obj.name}</div>\r\n\r\n                    <div className=\"description\">{obj.description}</div>\r\n\r\n                    <footer>{obj.languages}</footer>\r\n                </div>\r\n            </li>)\r\n        else\r\n            return <Fragment key={`work-element-${index}`}></Fragment>\r\n    })}\r\n    </ul>\r\n    if (props.test)\r\n        return <></>\r\n    return result\r\n}\r\n\r\nconst Work = (props) =>{\r\n    const [showAllRepos,toggleShowAllRepos] = useToggle(false);\r\n    return(\r\n    <div className = \"main\">\r\n        <div className=\"projects\">\r\n            <div className=\"workHeader\">\r\n                <h3>Some Things That I've Built</h3>\r\n            </div>\r\n            {all_projects(props,showAllRepos)}\r\n            <button onClick={toggleShowAllRepos}className=\"load\">{(showAllRepos) ? \"Load Less\" : \"Load More\"}</button>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Work;"]},"metadata":{},"sourceType":"module"}