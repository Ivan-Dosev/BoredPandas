{"ast":null,"code":"var _jsxFileName = \"/Users/ivandimitrov/Desktop/Portfolio-Website/client/src/Components/Work/Team.js\";\nimport React, { Fragment } from 'react';\nimport { useToggle } from '../../Resources/util/useToggle';\nimport './Team.css';\nimport '../../Containers/Terminal/Terminal.css';\nimport { ReactComponent as ExternalLink } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../Resources/icons/external-link.svg\";\nimport { ReactComponent as Folder } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../Resources/icons/134.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst content = props => {\n  let result = /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: props.repos.map((obj, index) => {\n      if (props.getLoad || index < 6) return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"insideContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"logo\",\n            children: [/*#__PURE__*/_jsxDEV(Folder, {\n              className: \"folder\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 25\n            }, this), obj.image]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title\",\n            children: obj.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"description\",\n            children: obj.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n            children: obj.languages\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }, this)\n      }, `work-element-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 20\n      }, this);else return /*#__PURE__*/_jsxDEV(Fragment, {}, `work-element-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 20\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 18\n  }, this);\n\n  if (props.test) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  return result;\n};\n\nconst Work = props => {\n  let currentContent = content(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"workHeader\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Meet the team\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), currentContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Work;\nexport default Work;\n\nvar _c;\n\n$RefreshReg$(_c, \"Work\");","map":{"version":3,"sources":["/Users/ivandimitrov/Desktop/Portfolio-Website/client/src/Components/Work/Team.js"],"names":["React","Fragment","useToggle","content","props","result","repos","map","obj","index","getLoad","image","name","description","languages","test","Work","currentContent"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,gCAA1B;AACA,OAAO,YAAP;AACA,OAAO,wCAAP;;;;;;AAKA,MAAMC,OAAO,GAAIC,KAAD,IAAS;AACrB,MAAIC,MAAM,gBAAG;AAAA,cACZD,KAAK,CAACE,KAAN,CAAYC,GAAZ,CAAgB,CAACC,GAAD,EAAKC,KAAL,KAAc;AAC3B,UAAGL,KAAK,CAACM,OAAN,IAAiBD,KAAK,GAAG,CAA5B,EACI,oBAAO;AAAA,+BACH;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,oCACI,QAAC,MAAD;AAAQ,cAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,oBADJ,EACiCD,GAAG,CAACG,KADrC;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,sBAAwBH,GAAG,CAACI;AAA5B;AAAA;AAAA;AAAA;AAAA,kBALJ,eAOI;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,sBAA8BJ,GAAG,CAACK;AAAlC;AAAA;AAAA;AAAA;AAAA,kBAPJ,eASI;AAAA,sBAASL,GAAG,CAACM;AAAb;AAAA;AAAA;AAAA;AAAA,kBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADG,SAAU,gBAAeL,KAAM,EAA/B;AAAA;AAAA;AAAA;AAAA,cAAP,CADJ,KAeI,oBAAO,QAAC,QAAD,MAAgB,gBAAeA,KAAM,EAArC;AAAA;AAAA;AAAA;AAAA,cAAP;AACP,KAjBA;AADY;AAAA;AAAA;AAAA;AAAA,UAAb;;AAoBA,MAAIL,KAAK,CAACW,IAAV,EACI,oBAAO,qCAAP;AACJ,SAAOV,MAAP;AACH,CAxBD;;AA0BA,MAAMW,IAAI,GAAIZ,KAAD,IAAU;AACnB,MAAIa,cAAc,GAAGd,OAAO,CAACC,KAAD,CAA5B;AACA,sBACA;AAAK,IAAA,SAAS,EAAG,MAAjB;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,EAIKa,cAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADA;AAWH,CAbD;;KAAMD,I;AAiBN,eAAeA,IAAf","sourcesContent":["import React, { Fragment } from 'react';\r\nimport { useToggle } from '../../Resources/util/useToggle'\r\nimport './Team.css';\r\nimport '../../Containers/Terminal/Terminal.css'\r\n\r\nimport {ReactComponent as ExternalLink} from \"../../Resources/icons/external-link.svg\";\r\nimport {ReactComponent as Folder} from \"../../Resources/icons/134.svg\";\r\n\r\nconst content = (props)=>{\r\n    let result = <ul>\r\n    {props.repos.map((obj,index) =>{\r\n        if(props.getLoad || index < 6)\r\n            return(<li key={`work-element-${index}`}>\r\n                <div className=\"insideContainer\">\r\n                    <div className=\"logo\">\r\n                        <Folder className=\"folder\"/>{obj.image}\r\n                    </div>\r\n                    \r\n                    <div className=\"title\">{obj.name}</div>\r\n\r\n                    <div className=\"description\">{obj.description}</div>\r\n\r\n                    <footer>{obj.languages}</footer>\r\n                </div>\r\n            </li>)\r\n        else\r\n            return <Fragment key={`work-element-${index}`}></Fragment>\r\n    })}\r\n    </ul>\r\n    if (props.test)\r\n        return <></>\r\n    return result\r\n}\r\n\r\nconst Work = (props) =>{\r\n    let currentContent = content(props)\r\n    return(\r\n    <div className = \"main\">\r\n        <div className=\"projects\">\r\n            <div className=\"workHeader\">\r\n                <h3>Meet the team</h3>\r\n            </div>\r\n            {currentContent}\r\n          \r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Work;\r\n"]},"metadata":{},"sourceType":"module"}